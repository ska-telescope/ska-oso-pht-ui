default:
  image: node:lts-alpine

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - dependencies
  - lint
  - build
  - test
  - pages
  - deploy
  - publish

cache:
  - key:
      files:
        - yarn.lock
      prefix: $CI_COMMIT_REF_SLUG
    fallback_keys:
      - cache-$CI_COMMIT_REF_SLUG
      - cache-default
    paths:
      - node_modules/
      - vendor/

#Install basic dependencies using yarn
install_dependencies:
  stage: dependencies
  tags:
    - k8srunner
  before_script:
    - rm -rf node_modules
  script:
    - npm config set registry https://registry.npmjs.org/
    - yarn install
  cache:
    paths:
      - node_modules/
    key:
      files:
        - yarn.lock
    policy: push
  rules:
    - changes:
        - yarn.lock

#Run the static code analysis
code_analysis:
  stage: lint
  tags:
    - k8srunner
  before_script:
    - mkdir -p build/reports
  script:
    - yarn install
    - yarn code-analysis
    - mv linting.xml build/reports/linting.xml
  artifacts:
    paths:
      - build/

test_and_coverage:
  allow_failure: true
  image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
  stage: test
  tags:
    - k8srunner
  cache:
    paths:
      - node_modules/
    policy: pull
  before_script:
    - mkdir -p build/reports
    - mkdir -p build/.nyc_output
    - yarn install --frozen-lockfile
  script:
    - yarn start &
    - yarn test:e2e:headless
    - yarn test:component:headless
    - yarn test:coverage:report:ci
    - cp build/reports/cobertura-coverage.xml build/reports/code-coverage.xml
  artifacts:
    paths:
      - build/

test-counts:
  image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
  stage: test
  tags:
    - k8srunner
  cache:
    paths:
      - node_modules/
    policy: pull
  before_script:
    - mkdir -p build/tests
    - yarn install --immutable
  script:
    - yarn test:cypress:component:ci
    - yarn start &
    - yarn test:cypress:e2e:ci
    - yarn merge-reports
  artifacts:
    paths:
      - build/

# list the current top level dependencies for the project
list_dependencies:
  stage: test
  tags:
    - k8srunner
  allow_failure: true
  cache:
    paths:
      - node_modules/
    policy: pull
  before_script:
    - npm config set registry https://registry.npmjs.org/
    - yarn install
  script:
    - yarn install
    - yarn list --depth=0 --json >> npm_deps.json
    - yarn list --depth=0  >> npm_deps.txt
    - mkdir .public
    - cp npm_deps.txt .public/
    - cp npm_deps.json .public/
  artifacts:
    paths:
      - .public

# Build the application
build:
  stage: build
  tags:
    - k8srunner
  cache:
    paths:
      - node_modules/
    policy: pull
  script:
    - npm config set registry https://registry.npmjs.org/
    - yarn install
    - yarn build
  after_script:
    - cp -r build/* public

# Roll up the application
distribution:
  stage: build
  tags:
    - k8srunner
  before_script:
    - yarn install
  script:
    - yarn rollup
  artifacts:
    paths:
      - dist/

# Publish the artifacts to CAR
publish-to-car:
  stage: publish
  tags:
    - k8srunner
  before_script:
    - npm config set registry $CAR_NPM_REPOSITORY_URL
    # npm config set always-auth true
    - echo $CAR_NPM_REPOSITORY_URL | awk -F '://' '{ cmd="npm config set -- //"$2":_auth \"${CAR_NPM_TOKEN}\" ";system(cmd) }'
    - npm config get
  script:
    - npm publish
  rules:
    # Publish from a tag for a release
    - if: $CI_COMMIT_TAG

# Publish the artifacts to gitlab registry
publish-to-gitlab:
  stage: publish
  tags:
    - k8srunner
  before_script:
    - npm config set @ska-telescope:registry https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
    - npm config set -- '//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
  script:
    - npm version --no-git-tag-version $(npm show latest version)-dev.$CI_COMMIT_SHORT_SHA
    - npm publish
  rules:
    #Â Do not publish on a tag pipeline, note this shouldn't transfer over to SKAO templates
    - if: $CI_COMMIT_TAG
      when: never

# export the report
pages:
  stage: pages
  tags:
    - k8srunner
  dependencies:
    - test_and_coverage
    - test-counts
    - list_dependencies
  script:
    - mv public/* .
    - cp -r .public/* public
  artifacts:
    paths:
      - public
    expire_in: 30 days

include:
  - template: Code-Quality.gitlab-ci.yml
  # .post step finalizers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'
  # .post step finalizers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'
  # deploy
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'
