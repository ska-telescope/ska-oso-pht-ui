{{- $name := include "ska-oso-pht-ui.name" .}}
{{- $secretName := printf "%s-%s-%s" $name "allsecrets" .Release.Name  -}}
{{- if .Values.vault.enabled }}
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
spec:
  type: kv-v2
  mount: {{ $.Values.vault.mount }}
  path: {{ $.Values.vault.secretPath }}
  destination:
    name: {{ $secretName }}
    create: true
    overwrite: true
    excludeRaw: true
    includes:
    {{- range .Values.vault.secretKeys }}
      - {{ . }}
    {{- end }}
{{- else }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  # This list should match the keys that are in the secret in Vault (i.e. those in Values.vault.secretKeys)
  # Update these values for local runs with relevants secrets
  MSENTRA_CLIENT_ID: "local-msentra-client-id"
  MSENTRA_TENANT_ID: "local-msentra-tenant-id"
{{- end }}